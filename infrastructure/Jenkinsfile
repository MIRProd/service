pipeline {
    agent any
    environment {
        // Folosește credentialul pentru autentificare Docker
        DOCKER_PASSWORD = credentials("docker-password")  // Aici sunt username și parola
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'  // Rulează comanda pentru a construi aplicația
            }
        }

        stage('Tag image') {
            steps {
                script {
                    // Obține tag-urile din Git
                    def GIT_TAG = sh([script: 'git fetch --tags && git tag', returnStdout: true]).trim()
                    def MAJOR_VERSION = sh([script: 'git tag | cut -d . -f 1', returnStdout: true]).trim()
                    def MINOR_VERSION = sh([script: 'git tag | cut -d . -f 2', returnStdout: true]).trim()
                    def PATCH_VERSION = sh([script: 'git tag | cut -d . -f 3', returnStdout: true]).trim()
                    
                    // Construirea imaginii Docker cu tag-ul respectiv
                    sh "docker build -t $DOCKER_USERNAME/hello-img:${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION} ."
                }
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    // Folosește credentialele pentru Docker pentru autentificare
                    withCredentials([usernamePassword(credentialsId: 'docker-password', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        // Autentifică-te în Docker Hub folosind username-ul și parola extrase din credențiale
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    }
                }
            }
        }

        stage('Push Image') {
            steps {
                script {
                    // Trimite imaginea Docker pe Docker Hub
                    sh "docker push $DOCKER_USERNAME/hello-img:${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"
                }
            }
        }
    }

    tools {
        jdk 'jdk21'  // Asigură-te că JDK-ul 21 este instalat în Jenkins și folosit în pipeline
    }
}

