pipeline {
    agent any
    environment {
        DOCKER_CREDS = credentials("docker-credentials")  // Folosește credentialul pentru autentificare Docker
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'  // Rulează comanda pentru a construi aplicația
            }
        }

        stage('Tag image') {
            steps {
                script {
                    // Definirea corectă a variabilelor
                    def GIT_TAG = sh(script: 'git fetch --tags && git tag', returnStdout: true).trim()
                    def MAJOR_VERSION = sh(script: 'git tag | cut -d . -f 1', returnStdout: true).trim()
                    def MINOR_VERSION = sh(script: 'git tag | cut -d . -f 2', returnStdout: true).trim()
                    def PATCH_VERSION = sh(script: 'git tag | cut -d . -f 3', returnStdout: true).trim()

                    // Verificăm ce taguri avem
                    echo "GIT_TAG: ${GIT_TAG}, MAJOR_VERSION: ${MAJOR_VERSION}, MINOR_VERSION: ${MINOR_VERSION}, PATCH_VERSION: ${PATCH_VERSION}"

                    // Construim imaginea Docker folosind versiunile extrase
                    sh "docker build -t ${DOCKER_CREDS_USR}/hello-img:${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION} ."
                }
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    // Autentificare Docker folosind token-ul în mod mai sigur
                    sh "echo $DOCKER_CREDS_PSW | docker login -u $DOCKER_CREDS_USR --password-stdin"
                }
            }
        }

        stage('Push Image') {
            steps {
                script {
                    echo "Pushing image ${DOCKER_CREDS_USR}/hello-img:${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"
                    sh "docker push ${DOCKER_CREDS_USR}/hello-img:${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"
                }
            }
        }
    }

    tools {
        jdk 'jdk21'  // Asigură-te că JDK-ul 21 este instalat în Jenkins și folosit în pipeline
    }
}
